version: 2.1
orbs:
  azure-cli: circleci/azure-cli@1.2.0
jobs:
  build:
    docker:
      - image: cimg/node:14.17
    steps:
      - checkout
      - restore_cache:
          # See the configuration reference documentation for more details on using restore_cache and save_cache steps
          # https://circleci.com/docs/2.0/configuration-reference/?section=reference#save_cache
          keys:
            - node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
      - run:
          name: install packages
          command: npm ci
      - save_cache:
          key: node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
          paths:
            - ~/.npm
      - run:
          name: Build Project
          command: npm run build
      - persist_to_workspace:
          root: ./
          paths:
            - dist/*
            - package.json
  test:
    docker:
      - image: cimg/node:14.17
    steps:
      - checkout
      - restore_cache:
          # See the configuration reference documentation for more details on using restore_cache and save_cache steps
          # https://circleci.com/docs/2.0/configuration-reference/?section=reference#save_cache
          keys:
            - node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
      - run:
          name: install packages
          command: npm ci
      - save_cache:
          key: node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
          paths:
            - ~/.npm
      - run:
          name: Install JUnit coverage reporter
          command: npm install --save-dev jest-junit
      - run:
          name: Run tests with JUnit as reporter
          command: npx jest --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/
      - store_artifacts:
          path: ./reports/junit
  deploy:
    executor: azure-cli/azure-docker
    steps:
      - azure-cli/install
      - azure-cli/login-with-service-principal
      - attach_workspace:
          at: ./
      - run: zip -r ./release.zip ./dist package.json
      - store_artifacts:
          path: ./release.zip
      - run: az webapp deploy --resource-group DefaultResourceGroup-WUS --name number-shuffler --src-path ./release.zip --clean true --restart true --async false
workflows:
  build-and-test:
    jobs:
      - build
      - test
      - deploy:
          requires:
            - build
            - test
          filters:
            branches:
              only: main
